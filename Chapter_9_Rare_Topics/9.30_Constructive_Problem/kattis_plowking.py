'''
Kattis - plowking
Constructive problem. Essentially we want to try to put low weight edges as part of cycles of the partial solution
generated by prim's algorithm. So if we assume 0->1 has weight 1 and 0->2 has weight 2, we should put 1->2 with weight
3 so that it won't be selected. then we have no choice but to allow 4 to be selected, then we can prevent 5,6
from being selected. Following this pattern, we keep skipping as many edges as possible, until we have just enough
edges to join the partial solution to the rest of the nodes, then we just take all those edges.

Time: O(n), Space: O(1)'''
n, m = map(int, input().split())

ans = 0
nc = 1
i = 1
while (n - nc < m - i + 1):  # first phase, delay adding as edges as far as possible
    ans += i
    i += nc
    nc += 1

for j in range(m-(n-nc)+1, m+1): # end phase, add remaining edges
    ans += j

print(ans)
